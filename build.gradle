plugins {
	id 'java'
	id 'maven-publish'
	id 'jacoco'
	id "org.sonarqube" version "2.7"
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

group = 'com.bb.java.developer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

publishing {

	publications {
		maven(MavenPublication) {
			groupId = 'com.bb.java.developer'
			artifactId = 'bb-java-developer-test-api'
			version = '0.0.1-SNAPSHOT'

			from components.java
		}
	}
}

repositories {
	mavenCentral()
	mavenLocal()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	springVersion = "5.1.6.RELEASE"
	javaxVersion = "2.0.1.Final"
	lombokVersion = "1.18.6"
	swaggerVersion = "2.9.2"
	jupiterVersion = "5.2.0"
	mockitoVersion = "2.23.0"
	equalsVerifierVersion = "3.1.8"
	jacocoVersion = "0.8.3"
}

dependencies {
	implementation "org.springframework:spring-webflux:${springVersion}"
	implementation "javax.validation:validation-api:${javaxVersion}"
	implementation "org.projectlombok:lombok:${lombokVersion}"
	implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
	implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	testCompile "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
	testCompile "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
	testCompile "nl.jqno.equalsverifier:equalsverifier:${equalsVerifierVersion}"

	testImplementation "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
	testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
	testImplementation "nl.jqno.equalsverifier:equalsverifier:${equalsVerifierVersion}"
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
	testLogging {
		events "passed", "skipped", "failed"
	}
}

jacoco {
	toolVersion = "${jacocoVersion}"
	reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

jacoco {
	toolVersion = "${jacocoVersion}"
	reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}